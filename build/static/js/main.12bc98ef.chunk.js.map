{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","input","jsonResponse","QuerySize","openHistory","check","e","this","setState","target","value","_this2","searchURL","concat","preventDefault","fetch","then","res","json","data","handleData","newHistory","JSON","parse","localStorage","getItem","console","log","push","date","Date","toDateString","searchTerm","setItem","stringify","loadCSS","document","querySelector","_this3","a","classes","props","react_default","createElement","className","CssBaseline_default","src","index_es","align","variant","onClick","alert","form","onSubmit","formSubmit","FormControl_default","margin","autocomplete","required","InputLabel_default","htmlFor","Input_default","name","placeholder","onChange","updateInputState","type","min","max","updateQueryState","App_RenderButton","isDisabled","color","changeHistory","App_RenderHistory","App_RenderSearch","Component","RenderHistory","historyArray","Table_default","TableHead_default","TableCell_default","TableBody_default","App_RenderSearchHistoryTable","RenderSearchHistoryTable","_this4","id","history","Object","toConsumableArray","splice","_this5","reverse","Fragment","map","c","i","TableRow_default","key","deleteItem","RenderButton","size","disabled","RenderSearch","length","style","border","App_RenderTable","RenderTable","href","withStyles","theme","root","background","spacing","unit","extendedIcon","marginRight","width","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12bc98ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n// Importing CSS from @material-ui/core | @material-ui/icons\nimport { Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link } from \"@material-ui/core\";\nimport { loadCSS } from 'fg-loadcss/src/loadCSS';\nimport Icon from '@material-ui/core/Icon';\n\nconst styles = theme => ({\n  root: {\n    background: \"white\"\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n});\nclass App extends Component {\n  state = {\n    input: \"\",\n    jsonResponse: [],\n    QuerySize: 10,\n    openHistory: false,\n    check: false\n  }\n  updateInputState(e) {\n      this.setState({input: e.target.value})  \n  }\n  updateQueryState(e) {\n    this.setState({QuerySize: e.target.value})\n  }\n  formSubmit(e) {\n    const searchURL = `https://en.wikipedia.org/w/api.php?&origin=*&action=opensearch&limit=${this.state.QuerySize}&search=`;\n    // where all the magic happens!\n    e.preventDefault();\n    var input = this.state.input;\n    // TODO: make this that thing: !input ? ... : ...\n    if(!input) {\n      // TODO: make something appear, clean up with Material UI :)\n      console.log('no input!')\n    }else {\n        fetch(searchURL + input,).then(res => res.json()).then(data => {\n          this.handleData(data);\n        })\n        var newHistory = JSON.parse(localStorage.getItem(\"searchHistory\"));\n        console.log(\"AAAAAAAAAAAAAAA\"+newHistory)\n        newHistory.push({\n          date: new Date().toDateString(),\n          searchTerm: input\n        })\n        localStorage.setItem(\"searchHistory\", JSON.stringify(newHistory))\n    }\n  }\n  handleData(data) {\n    console.log(data);\n    /* \n    DATA ARRAY DICTIONARY: \n   FROM 0-3;\n   INDEX 0: Search Term.\n   INDEX 1: Possible Terms.\n   INDEX 2: Definitions for Those Terms In Order.\n   INDEX 3: Links to Them.\n    */\n    this.setState({jsonResponse: data})\n  }\n  changeHistory() {\n    let history = this.state.openHistory;\n    history ? this.setState({openHistory: false}) : this.setState({openHistory: true})\n  }\n  handleModeChange() {\n    if(this.state.check === true) {\n      this.setState({ check: false })\n      localStorage.setItem(\"mode\", \"light\")\n    } else {\n      this.setState({ check: true});\n      localStorage.setItem(\"mode\", \"dark\")\n    }\n    var mode = localStorage.getItem(\"mode\");\n    if(!mode) { localStorage.setItem(\"mode\", \"light\")}\n    \n  }\n  componentDidMount() {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss'),\n    );\n  }\n  render() {\n  var a = localStorage.getItem(\"searchHistory\");\n  console.log(a)\n  if(a === null) {\n    console.log(\"SETTING THE STORAGE THING.\")\n      localStorage.setItem(\"searchHistory\", JSON.stringify([]));\n      localStorage.getItem('searchHistory');\n  }\n    if(typeof JSON.parse(localStorage.getItem(\"searchHistory\")) != \"object\") {\n      console.log(\"SETTING THE STORAGE THING.\")\n      localStorage.setItem(\"searchHistory\", JSON.stringify([]));\n      localStorage.getItem('searchHistory');\n    }\n    const { classes } = this.props;\n    return ( \n      <div className={\"App\"}>\n      <CssBaseline /> \n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Wikipedia_Banner.svg/1280px-Wikipedia_Banner.svg.png\"/>\n        <Typography align=\"center\" variant=\"h4\" onClick={() => alert(\"Made by Andy. \\n Github: check index.html :)\")}>\n          WikiSearch\n          </Typography>\n          <Typography align=\"center\" variant=\"caption\">\n            Search Wikipedia without even being on it!\n          </Typography>\n        <form className={classes.form}onSubmit={(e) => this.formSubmit(e)}>\n          <FormControl margin=\"normal\" autocomplete=\"off\" required>\n          <InputLabel htmlFor=\"search\">Search: </InputLabel>\n          <Input name=\"search\"  autocomplete=\"off\" placeholder=\"Wikipedia\" onChange={(e) => this.updateInputState(e)}/>\n          </FormControl>\n          <FormControl margin=\"normal\">\n          <InputLabel htmlFor=\"quantity\">Queries: </InputLabel>\n          <Input type=\"number\" name=\"quantity\" placeholder=\"10\" min=\"1\" max=\"500\" onChange={e => this.updateQueryState(e)}/>\n          </FormControl>\n          \n          <RenderButton isDisabled={this.state.input} classes={classes}/>\n          <Button variant=\"primary\" color=\"blue\" onClick={() => this.changeHistory()}>{this.state.openHistory ? \"Hide\" : \"View\"} Search History</Button>\n        </form>\n        <hr />\n    { this.state.openHistory ? <RenderHistory classes={classes}/> : <RenderSearch data={this.state.jsonResponse}/> } \n      </div>\n    );\n  }\n}\nclass RenderHistory extends Component {\n  render() {\n    const { classes } = this.props;\n    const historyArray = JSON.parse(localStorage.getItem(\"searchHistory\"));\n    return(\n      <div>\n      <Typography align=\"center\" variant=\"title\">Search History</Typography>\n      <div>\n        <Table>\n          <TableHead>\n          <TableCell>Date</TableCell>  \n          <TableCell>Search Query</TableCell>  \n         <TableCell>Delete</TableCell> \n          </TableHead>\n          <TableBody>\n          <RenderSearchHistoryTable classes={classes} data={historyArray}/>\n          </TableBody>\n        </Table>\n      </div>\n      </div>\n    )\n  }\n}\nclass RenderSearchHistoryTable extends Component {\n  deleteItem(e) {\n    const id = e.target.id;\n    if(!localStorage.getItem(\"searchHistory\")) {\n      localStorage.setItem(\"searchHistory\", JSON.stringify([]));\n    }\n    const history = JSON.parse(localStorage.getItem(\"searchHistory\"));\n    var newHistory = [...history];\n    newHistory.splice(id, 1);\n    localStorage.setItem(\"searchHistory\", JSON.stringify(newHistory))\n  }\n  state = {\n    a: this.props.data\n  }\n  render() {\n    const { classes } = this.props;\n    const data = this.state.a.reverse(); // this is done to not mutate the actual array ty wes bos\n    return(\n      <>\n      {data.map((c, i) => {\n        return(\n          <TableRow key={i}>\n          <TableCell>{c.date}</TableCell>\n          <TableCell>{c.searchTerm}</TableCell>\n          <TableCell><Button id={i} onClick={(e) => this.deleteItem(e)}>Delete</Button></TableCell>\n        </TableRow>\n        )\n      })}\n      </>\n    )\n  }\n}\nclass RenderButton extends Component {\n\n  render() {\n    const { classes } = this.props;\n    return this.props.isDisabled ? <Button size=\"small\" color=\"primary\" variant=\"outlined\" className={classes.margin} type=\"submit\">Search!</Button> : <Button disabled size=\"small\" className={classes.margin} type=\"submit\">Search!</Button>\n    \n  }\n}\nclass RenderSearch extends Component {\n  render() {\n    const data = this.props.data;\n    console.log(data);\n    if(data.length <= 0) {\n      return(\n        <></>\n      )\n    }\n    return(\n      <div>\n      <div>\n        <Typography align=\"center\" variant=\"headline\">Results:</Typography>\n      </div>\n      <div>\n        <Table style={{ border: \"1px solid black\"}}>\n          <TableHead style={{ border: \"1px solid black\"}}>\n          <TableCell>Possible Defx</TableCell>  \n          <TableCell>Definition</TableCell>  \n          <TableCell>Link</TableCell> \n          </TableHead>\n          <TableBody style={{ border: \"1px solid black\"}}>\n            <RenderTable data={data}/>\n          </TableBody>\n        </Table>\n      </div>\n      </div>\n    )\n  }\n}\nclass RenderTable extends Component {\n  render() {\n    const data = this.props.data;\n    console.log(data[1]);\n    return(\n      <>\n      {data[1].map((c, i) => {\n        return(\n        <TableRow key={i}>\n          <TableCell>{c}</TableCell>\n          <TableCell>{data[2][i]}</TableCell>\n          <TableCell><Link href={data[3][i]}>Read More...</Link></TableCell>\n        </TableRow>\n          )\n      })}\n      </>\n    )\n  }\n}\n// Prop Types\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nRenderButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}